{
  "compilerOptions": {
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    "baseUrl": "src",
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "isolatedModules": false /* Transpile each file as a separate module (similar to 'ts.transpileModule'). "webpack.config.ts cannot be compiled under " " because it is considered a global script file*/,
    "jsx": "react", /* Specify JSX code generation: 'preserve', 'react-native', 'react' or 'react-jsx'. */
    "lib": ["dom", "es5", "es6", "es7", "es2017", "esnext.intl", "es2017.intl", "es2018.intl"], /* Specify library files to be included in the compilation. */
    "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */ /* Type declaration files to be included in compilation. */
    "noEmit": true /* Do not emit outputs. */,
    "noImplicitAny": false,
    "paths": {
      "*": ["src/*"]
    },
    "removeComments": true,
    "resolveJsonModule": true,
    // "allowJs": true /* Allow javascript files to be compiled. Useful when migrating JS to TS */,
    // "checkJs": true /* Report errors in .js files. Works in tandem with allowJs. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "sourceMap": true,
    "strict": true /* Enable all strict type-checking options. */,
    "target": "ESNext" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
  },
  "exclude": ["node_modules", "build"],
  "include": ["./src",
    "internals/webpack/webpack.config.ts"
  ]
}
